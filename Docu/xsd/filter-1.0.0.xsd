<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2010-2022 BusinessCode GmbH, Germany

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<xs:schema
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="qualified"
  attributeFormDefault="unqualified"
  targetNamespace="http://www.businesscode.de/schema/bcdui/filter-1.0.0"
  xmlns:tns="http://www.businesscode.de/schema/bcdui/filter-1.0.0">
  <xs:annotation>
    <xs:documentation>
    </xs:documentation>
  </xs:annotation>

  <xs:element name="Filter" type="tns:TypeFilter">
    <xs:unique name="FilterIdUniqueness">
      <xs:selector xpath=".//*"/>
      <xs:field xpath="@id"/>
    </xs:unique>
  </xs:element>

  <xs:complexType name="TypeFilter">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="And" type="tns:TypeConnective" minOccurs="0"/>
      <xs:element name="Or" type="tns:TypeConnective" minOccurs="0"/>
      <xs:element name="Expression" type="tns:TypeExpression" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TypeConnective">
    <xs:complexContent>
      <xs:extension base="tns:TypeFilter">
        <xs:attribute name="id" type="xs:NCName" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="TypeExpression">
    <xs:attribute name="bRef" type="xs:NCName" use="required"/>
    <xs:attribute name="op" type="tns:TypeSQLOperators" default="="/>
    <xs:attribute name="value" type="xs:string"/>
    <xs:attribute name="ic" type="xs:boolean" use="optional" default="false">
      <xs:annotation><xs:documentation>
        Ignores case when comparing strings in f:Filter.
      </xs:documentation></xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:simpleType name="TypeSQLOperators">
    <xs:restriction base="xs:string">
      <xs:enumeration value="="/>
      <xs:enumeration value=">"/>
      <xs:enumeration value=">="/>
      <xs:enumeration value="&lt;"/>
      <xs:enumeration value="&lt;="/>
      <xs:enumeration value="&lt;>"/>
      <xs:enumeration value="!="/>
      <xs:enumeration value="like">
        <xs:annotation><xs:documentation>
          Note: Star '*' is used as wild card for like.
        </xs:documentation></xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="notLike"/>
      <xs:enumeration value="in"/>
      <xs:enumeration value="notIn"/>
      <xs:enumeration value="bitand"/>
      <xs:enumeration value="spatContains">
        <xs:annotation><xs:documentation>
          Area of bRef contains param' area. Param is expected to be provided as WKT.
        </xs:documentation></xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="spatContained">
        <xs:annotation><xs:documentation>
          Area of bRef is contained in param's area. Param is expected to be provided as WKT.
        </xs:documentation></xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="spatIntersect"/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>