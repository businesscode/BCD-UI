<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2010-2017 BusinessCode GmbH, Germany

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<schema xmlns="http://www.w3.org/2001/XMLSchema"
        targetNamespace="http://www.businesscode.de/schema/bcdui/subjectsettings-1.0.0"
        xmlns:tns="http://www.businesscode.de/schema/bcdui/subjectsettings-1.0.0" elementFormDefault="qualified"
        xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" jaxb:version="2.0"
        >
  <annotation>
    <documentation></documentation>
    <appinfo>
      <jaxb:schemaBindings><jaxb:package name="de.businesscode.bcdui.subjectsettings.config"/></jaxb:schemaBindings>
    </appinfo>
  </annotation>

  <!-- root element -->
  <element name="SubjectSettingsConfig" type="tns:SubjectSettingsConfig"></element>

  <complexType name="Security">
    <annotation>
    <documentation>
      this type contains security settings applicable to the context
    </documentation>
    </annotation>
    <sequence>
      <element name="Operation" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <documentation>
            the operation defining the permission (shiros context) to the named operation supported by implementation.
          </documentation>
        </annotation>
        <complexType>
          <attribute name="name" use="required" type="string">
            <annotation>
              <documentation>
                the name of operation to execute under security restrictions. This depends on the implementation of this security context.
              </documentation>
            </annotation>
          </attribute>
          <attribute name="permission" type="string" use="required">
            <annotation>
              <documentation>
                List of permissions required for this operation, these are checked against permission list configured by shiro implementation.
                The ACL is inclusive, means that all defined permissions are required to execute this operation. The list may be empty, effectively
                disengaging security policy.
                Example: userAdmin admin:write admin:create
              </documentation>
            </annotation>
          </attribute>
        </complexType>
      </element>
    </sequence>
  </complexType>

  <complexType name="SubjectSettingsConfig">
    <sequence>
      <element name="SubjectFilterTypes" minOccurs="0">
        <complexType>
          <sequence>
            <element name="SubjectFilterType" type="tns:SubjectFilterType" minOccurs="0" maxOccurs="unbounded">
              <annotation>
                <documentation>
                  Each SubjectFilterType defines the BindingItem on which to apply the restriction and a BindingSet with the user's rights
                </documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="Authentication" type="tns:AuthenticationType"/>
      <element name="SubjectSettings" minOccurs="0" type="tns:SubjectSettingsType"/>
    </sequence>
  </complexType>

  <complexType name="SubjectFilterType">
    <sequence>
      <element name="Caption" minOccurs="0" maxOccurs="1"/>
      <element name="BindingItems">
        <complexType>
          <sequence>
            <element name="C">
              <annotation>
                <documentation>
                  The BindingItem to apply the check on. Must be present in each BindingSet using this SubjectFilterType.
                </documentation>
              </annotation>
              <complexType>
                <attribute name="bRef"/>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="AssignableValues" minOccurs="0">
        <annotation><documentation>Configuration of the user-rights editor</documentation></annotation>
        <complexType>
          <sequence>
            <element name="BindingSet">
              <annotation><documentation>Where to find the allowed values.</documentation></annotation>
            </element>
          </sequence>
          <attribute name="isMulti" type="boolean">
            <annotation><documentation>If true, multiple values can be assigned to the user.</documentation></annotation>
          </attribute>
          <attribute name="addAllOption" type="boolean">
            <annotation><documentation>If true,  a wild-card can be assigned, allowing all, also including future, values.</documentation></annotation>
          </attribute>
        </complexType>
      </element>
    </sequence>
    <attribute name="op" type="tns:TypeSQLOperators" default="=">
      <annotation><documentation>Comparison operator, defaults to '='.</documentation></annotation>
    </attribute>
    <attribute name="name" use="required" type="string">
      <annotation><documentation>
        Unique Name of this FilterType definition.
        Will be referenced in the SubjectFilter/@type attribute in a BindingSet and will be the name of the filter type,
        for example given in bcd_sec_user_settings in right_type, unless overwritten with @type.
      </documentation></annotation>
    </attribute>
    <attribute name="type" use="optional" type="string">
      <annotation><documentation>
        Overwrites the filter type to map to in [bcd_sec_user_settings].right_type, i.e. you can define different filters
        all mapped to same type to realize relations like having origin_country or destination_country permission set
        defined by 'country' acl.
      </documentation></annotation>
    </attribute>
    <attribute name="isClientControlled" use="optional" type="boolean" default="false">
      <annotation><documentation>
        Allows this subject filter to be set/overridden from client, such filters shall not be used to restrict access to data 
        or operations as they are inherently insecure.
      </documentation></annotation>
    </attribute>
    <attribute name="isNullAllowsAccess" use="optional" type="boolean" default="false">
      <annotation><documentation>
      Enables null-value evaluation on data to be filtered. i.e. when using boolish security flags like 'isRestricted' you can set it to null value
      and set this attribute to true to allow accessing the data.
      </documentation></annotation>
    </attribute>
    <attribute name="mode" use="optional" type="string" default="RW">
      <annotation><documentation>
      Defines on which operations this filter type is being enabled. (R)ead operations only, (W)rite operations only, or both (RW) which is the default.
    </documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="AuthenticationType">
    <annotation><documentation>
    defines authentication method
    </documentation></annotation>
    <sequence>
      <element name="Ldap" minOccurs="0" maxOccurs="0"/>
      <element name="SubjectSettings" minOccurs="0">
        <annotation><documentation>
        enable SubjectSettings for authentication, please set Shiro realm to de.businesscode.bcdui.subjectsettings.JdbcRealm
        </documentation></annotation>
        <complexType/>
      </element>
    </sequence>
  </complexType>

  <complexType name="SubjectSettingsType">
    <sequence>
      <element name="Jdbc">
        <complexType>
          <choice>
            <element name="DataSource">
              <complexType>
                <attribute name="name"/>
              </complexType>
            </element>
            <element name="DefaultDataSource">
              <complexType/>
            </element>
          </choice>
        </complexType>
      </element>
    </sequence>
  </complexType>
 <simpleType name="TypeSQLOperators">
    <restriction base="string">
      <enumeration value="="/>
      <enumeration value=">"/>
      <enumeration value=">="/>
      <enumeration value="&lt;"/>
      <enumeration value="&lt;="/>
      <enumeration value="&lt;>"/>
      <enumeration value="like"/>
      <enumeration value="notLike"/>
      <enumeration value="in"/>
      <enumeration value="notIn"/>
      <enumeration value="bitand"/>
    </restriction>
  </simpleType>
</schema>