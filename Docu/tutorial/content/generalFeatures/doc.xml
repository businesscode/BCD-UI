<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../_generator/doc.xslt" media="screen" ?>
<!--
  Copyright 2010-2017 BusinessCode GmbH, Germany

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<Doc title="General Features"
  xmlns="http://www.businesscode.de/schema/bcdui/doc-1.1.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.businesscode.de/schema/bcdui/doc-1.1.0 ../../_generator/doc.xsd"
  state="draft">
  <Chapter title="General Features" type="overview">
    <Body>
      <dl>
        <dt>Bookmark feature</dt>
        <dd>Each page together with its settings like filter choosers or which parts are opened or hided can be bookmarked.
            Such a bookmark can be used as the starting point to enter the application and as a quick navigation link including
            previous settings.
            Additionally the link can be passed to others in case they have sufficient rights to enter the page.</dd>
      </dl>
    </Body>
  </Chapter>

  <Chapter title="Transactions and connection pooling" type="overview">
    <Body>
      Per default each request is associated with a transaction.
      Each server activity retrieves its connection from the request object, providing the data source name.
      All activities within the same request get the same connection when retrieving it from the request.
      The first database access in a request starts the transaction and the request finishes transaction with commit unless
      a ServletException is uncatched or a SOAPFault is returned, in this case a roll-back is executed.
      Still, each step may itself decide to commit or rollback its work.
      <p/>
      In case the client wants multiple writes to become part of one database transaction, it will a multi-WRS document.
    </Body>
  </Chapter>


  <Chapter title="XML Inclusion" type="overview">
    <Body>
      The BCD-UI library makes use of XML inclusion to support some advanced XML features. These includes
      are allowed in XML files read on the server and also on the client. The main reasons to use XML
      inclusion are as follows:
    </Body>
    <SubChapter title="Use cases">
      <Body>
        <dl>
          <dt>Reusing XML parts in different documents</dt>
          <dd>XML inclusion is especially useful is some XML documents share common content.
          Then this content can be put to a separate XML file. This use case is often applied in Binding
          files when two binding files have the same column names (e.g. for common dimension columns like
          period or geography).</dd>

          <dt>Merge different XML data sources</dt>
          <dd>Some XML documents require information from other sources (like reference data in grids)
          which can be implemented by defining a master document containing inclusions of other referenced
          documents.</dd>

          <dt>Lazy loading</dt>
          <dd>BCD-UI offers a special kind of include (bcdxml:include) for the client. This bcdxml:include
          can be evaluated on demand rather that resolving it immediately on loading. It is the basis
          for most lazy loading mechanism on the client.</dd>

          <dt>Structuring large documents</dt>
          <dd>It can be useful to split very large XML documents into parts to make them more
          readable.</dd>
        </dl>
      </Body>
    </SubChapter>
    <SubChapter title="Implementation">
      <Body>
        There are three kinds of XML inclusion supported by BCD-UI:
        <dl>
          <dt>XInclude without any XPointer</dt>
          <dd>
            This basic xinclude type is available on the server and on the client. These includes
            are replaced with the whole document available on the specified href.
            Example:
            <xml>
              <xi:include href="myDoc.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </xml>
          </dd>

          <dt>XInclude with XPointer element() Scheme</dt>
          <dd>
            This xinclude is also available on the server and client and it offers the selection
            of one single XML element to be included.
            Example:
            <xml>
              <xi:include href="myDoc.xml" xpointer="element(/1/2)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </xml>
          </dd>

          <dt>XInclude with XPointer xpointer() Scheme</dt>
          <dd>
            The BCD-UI client processor also supports xincludes with a limited set of the xpointer()
            Scheme. It supports all XPointers corresponding to one single XPath. With this XPath the
            target document is then filtered before it is inserted at the xinclude.
            Example:
            <xml>
              <xi:include href="myDoc.xml" xpointer="xpointer(/*/Country[. = 'DE']/City)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </xml>
          </dd>

          <dt>bcdxml:include</dt>
          <dd>
            Another client-only feature is the bcdxml:include. This is an extension to the standard
            XInclude in that it supports two additional features:
            It can contain a request document inside its body. If this is present it is compressed and then appended to the href.
            Example:
            <xml>
              <bcdxml:include href="myDoc.xml" xpointer="xpointer(/*/*)" xmlns:bcdxml="http://www.businesscode.de/schema/bcdui/bcdxml-1.0.0"/>
            </xml>
            Example with nested status document:
            <xml>
              <bcdxml:include href="myDoc.xml" xmlns:bcdxml="http://www.businesscode.de/schema/bcdui/bcdxml-1.0.0">
                <Status xmlns="http://www.businesscode.de/schema/bcdui/guiStatus-1.0.0">
                  <Filter xmlns="http://www.businesscode.de/schema/bcdui/filter-1.0.0">
                    <And id="period">
                      <Expression bRef="dy" op="&gt;=" value="2010-01-01"/>
                      <Expression bRef="dy" op="&lt;=" value="2010-12-31"/>
                    </And>
                  </Filter>
                </Status>
              </bcdxml:include>
            </xml>
            TODO: verify
          </dd>
        </dl>
      </Body>
    </SubChapter>
  </Chapter>
</Doc>

