<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../_generator/doc.xslt" media="screen" ?>
<!--
  Copyright 2010-2017 BusinessCode GmbH, Germany

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<doc:Doc title="Detail exports" xmlns:doc="http://www.businesscode.de/schema/bcdui/doc-1.1.0">
  <doc:Chapter title="Detail exports" type="overview">
    <doc:Body>
      The BCD-UI supports the export of detail data to spread sheets.
      Often process detail data for processes failing in regards of a certain KPI is further evaluated in external tools. Another
      scenario is that the selected data may be used in presentations or other reporting.
      A main issue with exports is keeping information about the data type.
      Often csv exports are incorrectly shown in spread sheets but work when loaded into other data bases.
      To address this issue, BCD-UI supports both exports in csv format and in a format keeping information about the data fromat.
    </doc:Body>

    <doc:SubChapter title="Exporting">
      <doc:Body>
        Exporting to CSV or Excel (Sylk) is done by calling the detailExport function and providing a <a href="../../xmlData/doc.xml">webRowSet</a> request. Optionally
        you can provide a filename and define the type (by default it's Excel/Sylk)
        <pre><![CDATA[bcdui.component.exports.excel.detailExport( { wrq: modelName, type: 'sylk', fileName: fileName } );]]></pre>
      </doc:Body>
    </doc:SubChapter>

    <doc:SubChapter title="Cube Detail Export">
      <doc:Body>
        When working with cubes you might want a detail export for a specific cell within the cube. A webRowSet request should be
        created which takes the page's general (sidebar) filters plus the filters coming from the specific cell (e.g. you've selected
        a value in a specific country column and in a specific product row). And there might be additional report based filters needed
        for the cell (e.g. you want a failure-only export for a specific KPI value).
        <p/>
        <img src="export.png"/>
        <p/>
        Luckily BCD-UI provides you everything to quickly setup such a cube cell detail export.
        First of all you need a way to execute the detail export on a specific cell. This is done by having the Detail Export functionality
        given in the context menu. The default context menu lists it, too.
        Secondly your report configuration needs to list what columns should be exported. This is done in the cubeConfiguration.xml file's
        Detail Export section:
        <doc:xml>
         <dm:DetailDataDefaults xmlns:dm="http://www.businesscode.de/schema/bcdui/dimmeas-1.0.0">
           <dm:DetailData>
              <dm:AppendColumns>
                <wrq:C bRef="m02_i" caption="Bkg Ref" xmlns:wrq="http://www.businesscode.de/schema/bcdui/wrs-request-1.0.0"/>
                <wrq:C bRef="m02_t" caption="Bkg Type" xmlns:wrq="http://www.businesscode.de/schema/bcdui/wrs-request-1.0.0" />
              </dm:AppendColumns>
           </dm:DetailData>  
         </dm:DetailDataDefaults>
        </doc:xml>
        In this case two columns are exported when you export a cell's value.
        <p/>
        <img src="excel.png"/>
      </doc:Body>
    </doc:SubChapter>
    <doc:SubChapter title="More On Export">
      <doc:Body>
        <p/>
        You only want to export specific values. Define a detail export filter on measure level:
        <doc:xml>        
          <dm:Measure id="m01_i" caption="Bkg Ref" xmlns:dm="http://www.businesscode.de/schema/bcdui/dimmeas-1.0.0" xmlns:calc="http://www.businesscode.de/schema/bcdui/calc-1.0.0" xmlns:f="http://www.businesscode.de/schema/bcdui/filter-1.0.0">
            <calc:Calc type-name="NUMERIC">
              <calc:ValueRef idRef="m01_i" aggr="sum" caption="Bkg Ref"/>
            </calc:Calc>
            <dm:DetailData>
              <f:Filter xmlns:f="http://www.businesscode.de/schema/bcdui/filter-1.0.0">
                <f:Expression op="=" value="1" bRef="m01_i"/>
              </f:Filter>
            </dm:DetailData>
          </dm:Measure> 
        </doc:xml>
        <p/>
        You don't want a general export list but a measure specific one:
        <doc:xml>        
          <dm:Measure id="m01_i" caption="Bkg Ref" xmlns:dm="http://www.businesscode.de/schema/bcdui/dimmeas-1.0.0" xmlns:calc="http://www.businesscode.de/schema/bcdui/calc-1.0.0" xmlns:f="http://www.businesscode.de/schema/bcdui/filter-1.0.0">
            <calc:Calc type-name="NUMERIC">
              <calc:ValueRef idRef="m01_i" aggr="sum" caption="Bkg Ref"/>
            </calc:Calc>
            <dm:DetailData>
              <dm:Columns xmlns:wrq="http://www.businesscode.de/schema/bcdui/wrs-request-1.0.0">
                <wrq:C bRef="m01_i_sub_a"/>
                <wrq:C bRef="m01_i_sub_b"/>
              </dm:Columns>
            </dm:DetailData>
          </dm:Measure>
        </doc:xml>
        <p/>
        Put static colums at the start or end of a detailExport list is also possible:
        <doc:xml>        
          <dm:DetailDataDefaults xmlns:dm="http://www.businesscode.de/schema/bcdui/dimmeas-1.0.0" xmlns:wrq="http://www.businesscode.de/schema/bcdui/wrs-request-1.0.0">
            <dm:DetailData>
              <dm:PrependColumns>
                <wrq:C bRef="yr" caption="Year"/>
                <wrq:C bRef="mo" caption="Month"/>
              </dm:PrependColumns>
              <dm:AppendColumns>
                <wrq:C bRef="orig_country" caption="Origin Country"/>
                <wrq:C bRef="dest_country" caption="Dest Country"/>
              </dm:AppendColumns>
            </dm:DetailData>  
          </dm:DetailDataDefaults>
        </doc:xml>
        Exporting data as Excel Hyperlink cells is also possible. You only need to specify how the url behind the cell value is created.
        You can do this by adding a wrq:A attribute named "bcdSylkUrl" to the cell and it its body we concatenate a static url with the cell's value.
        If the url starts with a /, the current application path is used as a prefix.
        <doc:xml>
          <dm:Measure id="mProductivity_t" caption="Productivity T" xmlns:dm="http://www.businesscode.de/schema/bcdui/dimmeas-1.0.0">
            <calc:Calc type-name="NUMERIC" scale="1" xmlns:calc="http://www.businesscode.de/schema/bcdui/calc-1.0.0">
              <calc:ValueRef idRef="m02_t" aggr="sum"/>
            </calc:Calc>
            <dm:DetailData>
              <dm:Columns>
                <wrq:C bRef="m02_t" xmlns:wrq="http://www.businesscode.de/schema/bcdui/wrs-request-1.0.0">
                  <wrq:A name="bcdSylkUrl" bRef="bcdSylkUrl">
                    <wrq:Calc type-name="VARCHAR">
                      <wrq:Concat>
                        <wrq:Value>/myPage/myPageController.jsp?ref=</wrq:Value>
                        <wrq:ValueRef idRef="m01_t"/>
                      </wrq:Concat>
                    </wrq:Calc>
                  </wrq:A>
                </wrq:C>    
              </dm:Columns>
            </dm:DetailData>
          </dm:Measure>
        </doc:xml>
      </doc:Body>
    </doc:SubChapter>
  </doc:Chapter>
</doc:Doc>