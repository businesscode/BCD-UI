<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../_generator/doc.xslt" media="screen" ?>
<!--
  Copyright 2010-2017 BusinessCode GmbH, Germany

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<doc:Doc title="Use Gradle to setup a BCD-UI project" xmlns:doc="http://www.businesscode.de/schema/bcdui/doc-1.1.0">
  <doc:Chapter title="Overview" type="overview">
    <doc:Body>
      <p>
        This section it about building a simple BCD-UI project with <a target="_blank" href="https://gradle.org/">gradle</a>.
        All libraries required are
        specified as dependencies and it is therefore easy to get the application setup.
      </p>
      <div>The following steps are necessary in general:
        <ol>
          <li>Install Gradle plugin if necessary</li>
          <li>Add gradle.build to the project</li>
          <li>Configure gradle support for the project</li>
          <li>Refresh dependencies</li>
        </ol>
        Each step is described in the following sub chapters.
      </div>
    </doc:Body>
  </doc:Chapter>
  <doc:Chapter title="Step by Step">
    <doc:SubChapter title="Gradle plugin">
      <doc:Body>
        Install a gradle plugin. The following steps depend on the BuildShip plugin. Other gradle plugins might be different.
      </doc:Body>
    </doc:SubChapter>
    <doc:SubChapter title="Add Gradle.build to the project">
      <doc:Body>
        <p>
          The BCD-UI build process is implemented with gradle as an example, but can be built with any tool.
          So we first create a empty build.gradle file in the root directory of the GettingStarted project.
          Open the file for editing and paste the following content into the build.gradle file. The important part is that the configuration of webAppDirName is right.
          The biggest part of the build file are the dependencies.
        </p>
        <pre>
apply plugin: "java"
apply plugin: "war"


webAppDirName = "WebContent"

war {
  baseName   = "GettingStarted"
  includeEmptyDirs = false
}
// 3rdParty jars
configurations { provided }
dependencies {
  repositories {
    mavenCentral()
  maven {
      url "https://github.com/businesscode/maven-repo/raw/master"
    }
    runtime 'commons-beanutils:commons-beanutils:1.8.3'
    runtime 'commons-codec:commons-codec:1.9'
    runtime 'commons-collections:commons-collections:3.2.1'
    runtime 'commons-dbutils:commons-dbutils:1.5'
    runtime 'commons-io:commons-io:2.0'
    runtime 'commons-lang:commons-lang:2.4'
    runtime 'commons-logging:commons-logging:1.1.1'
    runtime 'commons-vfs:commons-vfs:1.0'
    runtime 'log4j:log4j:1.2.17'
    runtime 'net.sf.ehcache:ehcache-core:2.3.1'
    runtime 'org.apache.shiro:shiro-all:1.3.2'
    runtime 'org.apache.velocity:velocity:1.7'
    runtime 'org.apache.poi:poi:3.14'
    runtime 'org.apache.poi:poi-ooxml:3.14'
    runtime 'org.apache.poi:poi-ooxml-schemas:3.14'
    runtime 'org.slf4j:slf4j-api:1.6.1'
    runtime 'org.slf4j:slf4j-log4j12:1.6.1'
    runtime 'de.businesscode.bcdui:bcd-ui-theme-bcd:5.0.0'
    compile 'de.businesscode.bcdui:bcd-ui-core:5.0.0'
  }
}
        </pre>
      </doc:Body>
    </doc:SubChapter>
    <doc:SubChapter title="Configure Gradle support for the project">
      <doc:Body>
        <p>
          Before we can use the gradle file within eclipse, we have to add the "Gradle Nature" to the GettingStarted project. So select the project,
          open the context menu and choose Configure->Add Gradle Nature.
        </p>
      </doc:Body>
    </doc:SubChapter>
    <doc:SubChapter title="Refresh dependencies">
      <doc:Body>
        <p>
          Afterwards the context menu has a new entry for gradle and there we can invoke grade refresh. The menu entry is only visible when on project root or
          gradle.build file.
          This might take some time, because all libraries specified
          by the dependencies above will be loaded.

        </p>
        <img src="gradle_refresh_project.png"/>
        <p>
          After the gradle refresh, the GettingStarted project has its dependencies and these can be found in the project tree as shown in the following image.
        </p>
        <img src="references.png"/>
      </doc:Body>
    </doc:SubChapter>
  </doc:Chapter>  
</doc:Doc>