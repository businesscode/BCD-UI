<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../_generator/doc.xslt" media="screen" ?>
<!--
  Copyright 2010-2017 BusinessCode GmbH, Germany

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<doc:Doc title="Virtual File System (VFS)" xmlns:doc="http://www.businesscode.de/schema/bcdui/doc-1.1.0">

  <doc:Chapter title="Virtual File System (VFS)" type="overview">
    <doc:Body>
      The Virtual File System (VFS) allows you to store resources in the database and make them available like real physical resources.

      As an example you can take the cube template editor. It makes use of the VFS. The report layout is stored in the database as an XML file which can be
      accessed at runtime via the path "/vfs/reports/myTestCube/layouts.xml".
      You can even store, modifiy, reload <a href="../binding/doc.xml">binding files</a> in the database. They will have a higher priority than static ones with the same id.
    </doc:Body>


  <doc:SubChapter title="VFS Setup" type="overview">
    <doc:Body>
      For the virtual file system you need a database table and a corresponding binding set with the well known id "bcd_virtualFileSystem":
  <pre><![CDATA[
CREATE TABLE tb_virtualFileSystem
(
   path           VARCHAR2(1024 CHAR) NOT NULL,
   ressource_clob CLOB,
   ressource_blob BLOB,
   is_server      INTEGER NOT NULL,
   CONSTRAINT tb_virtualFileSystem_pk UNIQUE (path, is_server)
);]]></pre>
      <doc:xml>
        <BindingSet id="bcd_virtualFileSystem" table="tb_virtualFileSystem" xmlns="http://www.businesscode.de/schema/bcdui/bindings-1.0.0">
          <C id="path" isKey="true">
            <Column>PATH</Column>
          </C>
          <C id="resourceClob" type-name="CLOB">
            <Column>RES</Column>
          </C>
          <C id="resourceBlob" type-name="BLOB">
            <Column>RES_BLOB</Column>
          </C>
          <C id="isServer" type-name="INTEGER">
            <Column>0</Column>
          </C>
        </BindingSet>
      </doc:xml>
      The columns in detail:
      <dl>
        <dt>path</dt>
        <dd>The path under which the stored data is available. For example: "/vfs/reports/MyReport/MyReportLayouts.xml"</dd>
        <dt>resourceClob</dt>
        <dd>A clob object holding the data. For example (cube template):
          <pre><![CDATA[<?xml version="1.0" standalone="no"?>
<cube:Layouts xmlns:cube="http://www.businesscode.de/schema/bcdui/cube-2.0.0" xmlns:dm="http://www.businesscode.de/schema/bcdui/dimmeas-1.0.0">
  <cube:Layout cubeId="cube" name="Station-Facility Daily Misssing NC" description="Station-Facility Daily Misssing NC" id="1421137298132">
    <cube:Dimensions>
      <cube:Rows>
        <dm:LevelRef bRef="dest_facility_id" caption="Destination Station &amp; Facility" total="trailing"/>
      </cube:Rows>
    </cube:Dimensions>
    <cube:Measures>
      <cube:AllDims>
        <dm:MeasureRef caption="Total" idRef="t_missing_nc"/>
          <dm:MeasureRef caption="Miss NC Ttl" idRef="i_missing_nc"/>
          <dm:MeasureRef caption="Missing NC Managed" idRef="i_missing_nc_managed"/>
          <dm:MeasureRef caption="Missing NC Unmanaged" idRef="i_missing_nc_unmanaged"/>
          <dm:MeasureRef caption="Missing NC Unmanaged %" idRef="i_missing_nc_unmanaged_perc"/>
        </cube:AllDims>
      </cube:Measures>
   </cube:Layout>
</cube:Layouts>]]></pre>
        </dd>
        <dt>resourceBlob</dt>
        <dd>A blob object holding the data.</dd>
        <dt>isServer</dt>
        <dd>A 0/1 value specifying is the data is a server-only (= 1) resource and won't be available on client side.</dd>
      </dl>

      You should also modify your web.xml file with changes to the StaticResourceServlet and the ClientCachingFilter.
      <doc:xml>
        <servlet>
          <servlet-name>bcdui4.StaticResourceServlet</servlet-name>
          <servlet-class>de.businesscode.bcdui.web.servlets.StaticResourceServlet</servlet-class>
          <init-param>
            <param-name>vfsFileExtensions</param-name>
            <param-value>xml txt vfsxml</param-value>
          </init-param>
        </servlet>
        <servlet-mapping>
          <servlet-name>bcdui4.StaticResourceServlet</servlet-name>
          <url-pattern>/bcdui/*</url-pattern>
          <url-pattern>/vfs/*</url-pattern>
          <url-pattern>*.vfsxml</url-pattern>
        </servlet-mapping>
        <filter>
            <filter-name>bcdui4.ClientCachingFilter</filter-name>
            <filter-class>de.businesscode.bcdui.web.cacheControl.ClientCachingFilter</filter-class>
            <init-param>
              <description>expires mondays at 3a.m GMT, since the RTP is usually on Weekend</description>
              <param-name>ExpiresAbsDow</param-name>
              <param-value>Mon-03</param-value>
            </init-param>
            <init-param>
              <param-name>ExcludeUrls</param-name>
              <param-value>/bcdui/servlets/ /vfs/ /bcdui/bcdui.js</param-value>
            </init-param>
            <init-param>
              <param-name>ExcludeExtensions</param-name>
              <param-value>*.jsp</param-value>
            </init-param>
          </filter>
      </doc:xml>
    </doc:Body>
  </doc:SubChapter>

  <doc:SubChapter title="VFS reading, writing, refreshing and VFS Bindings" type="overview">
    <doc:Body>
      As mentioned, data from the VRS is accessible via the given path. So you can e.g. create a model out of the stored data like this: 
<pre><![CDATA[new bcdui.core.SimpleModel({url: bcdui.contextPath + '/vfs/reports/myTestCube/layouts.xml'})]]></pre>
      Writing can be achieved by sending a wrs request to the server, e.g. with the help of an automodel.
<pre><![CDATA[
  var vfs = new bcdui.core.AutoModel({bindingSetId: "bcd_virtualFileSystem", bRefs: "path resourceClob" });
  vfs.execute();
  /* now modify your path in that model (/*/wrs:Data/wrs:R/wrs:C[1]) and resourceClob (/*/wrs:Data/wrs:R/wrs:C[2]) */
  /* and store it back via sendData*/
  vfs.sendData();
]]></pre>

      After writing data to the VFS you might need to refresh the cache to make the changes active. You can do this by calling the CacheManager servlet with an action parameter:
      <doc:xml>      
        <servlet>
          <servlet-name>bcdui4.CacheManager</servlet-name>
          <servlet-class>de.businesscode.bcdui.web.servlets.CacheManager</servlet-class>
        </servlet>
        <servlet-mapping>
          <servlet-name>bcdui4.CacheManager</servlet-name>
          <url-pattern>/bcdui/servlets/CacheManager</url-pattern>
        </servlet-mapping>
      </doc:xml>
<pre><![CDATA[jQuery.ajax({
  method: "GET",
  url : bcdui.contextPath+ "/bcdui/servlets/CacheManager?action=refreshVFS",
  success : function (data, successCode, jqXHR) { /* do something */ }
});
]]></pre>
      Available action values are:
      <dl>
        <dt>refreshVFS</dt>
        <dd>clears the VFS cache</dd>
        <dt>refreshVFSBindings</dt>
        <dd>clears the VFS cache and reloads vfs stored bindings</dd>
        <dt>regenerateBindings</dt>
        <dd>regenerates bindings</dd>
        <dt>refreshAll</dt>
        <dd>clears the VFS cache, regenerates bindings and reloads vfs stored bindings</dd>
      </dl>
      
      The refresh / regenerate Bindings options are needed if you use binding files which are stored
      on VFS level. To use VFS stored bindings, you need to use a path root folder "/WEB-INF/bcdui/bindings/virtual".
      So if you create a VFS entry with path "/WEB-INF/bcdui/bindings/virtual/test.xml" and resourceClob data:
  <pre><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<BindingSet id="I18N_TM_EXPORT" table="TB_I18N" xmlns="http://www.businesscode.de/schema/bcdui/bindings-1.0.0">
  <C id="key" caption="Key" type-name="VARCHAR" isKey="true"><Column>KEY</Column></C>
</BindingSet>
]]></pre>
     This virtual one would be used over a (possibly) existing static binding set "I18N_TM_EXPORT".
     Read more on bindings <a href="../binding/doc.xml">here</a>.
    </doc:Body>
  </doc:SubChapter>

  </doc:Chapter>

</doc:Doc>
