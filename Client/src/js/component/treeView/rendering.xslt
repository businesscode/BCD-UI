<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2010-2017 BusinessCode GmbH, Germany

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!--
  This stylesheet renders the output of generateTree.xslt (which is basically
  a WRS which has <wrs:R> grouped by <wrs:Level> elements) as created by treeView/gernerateTree.xslt -->

<!--
  Input: output of treeView/gernerateTree.xslt
  Params: number_of_levels, per default number of Columns/C with @dimId attribute.
  Output: HTML tree

  Rows are collapsed by default, except if there is a single child only.

  @bcdRowIdent will the the original row's @id (@id even before and after the generateTree step)
  @levelId holds the dimension values concatenated by 3 underscores ('___') (it will not end by bcdLeaf as the input Wrs)
  @bcdLeaf="true" indicates the lowest level

 -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:bcdxml="http://www.businesscode.de/schema/bcdui/bcdxml-1.0.0"
  xmlns:rnd="http://www.businesscode.de/schema/bcdui/renderer-1.0.0"
  xmlns:wrs="http://www.businesscode.de/schema/bcdui/wrs-1.0.0"
  xmlns:xp="http://www.businesscode.de/schema/bcdui/xsltParams-1.0.0"
  xmlns:xsla="http://www.w3.org/1999/XSL/Transform/Alias"
  xmlns:generator="urn(bcd-xsltGenerator)">

  <xsl:import href="bcduicp://bcdui/xslt/renderer/htmlHeaderBuilder.xslt"/>

  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="no" media-type="text/xslt"/>

  <xsl:namespace-alias stylesheet-prefix="xsla" result-prefix="xsl"/>

  <xsl:variable name="renderingTemplate" select="document('bcduicp://bcdui/js/component/treeView/renderingTemplate.xslt')"/>
  <xsl:variable name="renderingTemplateInclude" select="document('bcduicp://bcdui/xslt/renderer/htmlHeaderBuilderTemplate.xslt')"/>

  <!--
    Root template
   -->
  <xsl:template match="/*">
    <xsla:stylesheet version="1.0">
      <xsl:copy-of select="$renderingTemplate/*/@*"/>
      <xsl:comment>Generated by tree renderer</xsl:comment>
  
      <!-- We make sure that no logic is applied if there is not data
        Makes it faster and logic can rely on data being existing
       -->
      <xsl:choose>
        <xsl:when test="/*/wrs:Data//wrs:R/wrs:*">
          <xsl:apply-templates select="$renderingTemplate/*/*" mode="generateXSLT"/>
          <xsl:apply-templates select="$renderingTemplateInclude/*/*[local-name()!='import']" mode="generateXSLT"/>
        </xsl:when>
        <xsl:otherwise>
          <xsla:output method="html" version="1.0" encoding="UTF-8" indent="no"/>
          <xsla:template match="/*">
            <div class="bcdInfoBox"><span bcdTranslate="bcd_EmptyReport">Please note, no data is available for the current chooser settings.</span></div>
          </xsla:template>
        </xsl:otherwise>
      </xsl:choose>
  
    </xsla:stylesheet>
  </xsl:template>


</xsl:stylesheet>