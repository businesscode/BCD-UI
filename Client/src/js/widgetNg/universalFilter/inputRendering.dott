<span class="{{= it.params.cssClassPrefix }}conj-container">
  <!-- junction; only if not in update mode -->
  {{? it.input.selectSingleNode("/Status/isUpdating[.='true']") == null }}
  <bcd-singleselectng
    optionsModelXPath="{{= it.params.xPath_reference_junction }}/@caption"
    optionsModelRelativeValueXPath=".."
    targetModelXPath="{{= it.params.xPath_junction }}"
  ></bcd-singleselectng>
  {{?}}
</span>
<span>
  <!-- filter-item -->
  <bcd-singleselectng
    required="true"
    targetModelXPath="{{= it.params.xPath_bref }}"
    optionsModelXPath="{{= it.params.bRefOptionsModelXPath }}"
    optionsModelRelativeValueXPath="{{= it.params.bRefOptionsModelRelativeValueXPath }}"
  ></bcd-singleselectng>
</span>
<span>
  <!-- operation -->
  <bcd-singleselectng
    required="true"
    optionsModelXPath="{{= it.params.xPath_reference_op }}/@caption"
    optionsModelRelativeValueXPath=".."
    targetModelXPath="{{= it.params.xPath_op }}"
  ></bcd-singleselectng>
</span>
<span id="{{=it.params.instanceId}}_operator_container" class="{{= it.params.cssClassPrefix }}operator-container">
  {{? it.input.selectSingleNode("/Status/Op[.='in']") != null }}
  <!-- creates a default multi input value input; if you need custom one, do it but write to xPath_values -->
  <div
    bcdOnLoad="jQuery(this).trigger('bcdui:universalFilter:createMultiValueInput')"
    targetModelXPath="{{= it.params.xPath_values }}"
  ></div>
  {{??}}
  <!-- reference-value -->
  <bcd-inputng
    targetModelXPath="{{= it.params.xPath_value }}"
  ></bcd-inputng>
  {{?}}
</span>
<span>
  <bcd-buttonng caption="OK" onClickAction="bcdui.widgetNg.universalFilter.triggerAdd"></bcd-buttonng>
</span>
<span class="{{= it.params.cssClassPrefix }}creator-container-closer closeContainer">
</span>
