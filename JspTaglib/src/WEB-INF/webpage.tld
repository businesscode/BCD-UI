<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2010-2017 BusinessCode GmbH, Germany

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<taglib xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
    version="2.1">

  <description>
    A library containing the tags to build up the frame of a web page. The
    entry point for the frame is defined in the frame tag. All other tags
    modify the HTML page generated by this tag.
  </description>
  <display-name>BUI webpage</display-name>
  <tlib-version>3.2</tlib-version>
  <short-name>webpage</short-name>
  <uri>http://de.businesscode.web/jsp/taglib/bcdui/webpage</uri>
  <!--
  <validator>
    <validator-class>
        de.businesscode.soa.taglib.tlv.WebpageTLV
    </validator-class>
    <description>
        taglibrary validation
    </description>
  </validator>
     -->
  <tag>
    <description>
      Executes JavaScript code, just like the normal <![CDATA[&lt;script>]]> tag.
      But if it is inside another webpage:script tag it does not produce another
      <![CDATA[&lt;script/>]]> tag inside it, so they can be savely nested.
    </description>
    <name>script</name>
    <tag-class>de.businesscode.bcdui.web.taglib.webpage.GlobalScriptTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <name>url</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <example>
      &lt;webpage:script>
        var myExporter = new HTMLExporter();
      &lt;/webpage:script>
    </example>
  </tag>
  <tag>
    <description>
      For internal use by the BCD-UI library for communication of tags with each other.
    </description>
    <name>paramBag</name>
    <tag-class>de.businesscode.bcdui.web.taglib.webpage.ParamBagTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <name>forwarding</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <description>
      For internal use by the BCD-UI library for communication of tags with each other.
    </description>
    <name>paramBag.add</name>
    <tag-class>de.businesscode.bcdui.web.taglib.webpage.AddToParamBagTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <name>key</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>value</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <description>
      For internal use by the BCD-UI library. Prints the id if not empty and or a new random page-unique id prefix_runningNumber otherwise.
    </description>
    <name>uniqueId</name>
    <tag-class>de.businesscode.bcdui.web.taglib.webpage.UniqueIdTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>prefix</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <description>
      For internal use by the BCD-UI library.
    </description>
    <name>paramBag.extractJSParams</name>
    <tag-class>de.businesscode.bcdui.web.taglib.webpage.ExtractJSParamsFromParamBagTag</tag-class>
    <body-content>empty</body-content>
  </tag>
  <function>
      <description>Prints the first argument as JavaScript Array string if it is non-emtpy and the second otherwise.</description>
      <name>coalesceJSArray</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String coalesceJSArray(java.lang.Object,java.lang.Object)
      </function-signature>
  </function>
  <function>
      <description>Prints the first argument as JavaScript-quoted string if it is non-emtpy and the second otherwise.</description>
      <name>coalesceJSString</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String coalesceJSString(java.lang.Object,java.lang.Object)
      </function-signature>
  </function>
  <function>
      <description>Prints the first argument as string if it is non-emtpy and the second otherwise.</description>
      <name>coalesceString</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String coalesceString(java.lang.Object,java.lang.Object)
      </function-signature>
  </function>
  <function>
      <description>Prints the first argument as string.</description>
      <name>makeString</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String makeString(java.lang.Object)
      </function-signature>
  </function>
  <function>
      <description>Print Java String array as Javascript string array.</description>
      <name>jsArray</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String jsArray(java.lang.Object)
      </function-signature>
  </function>
  <function>
      <description>Converts a whitespace-separated string list to a JS array with strings.</description>
      <name>stringToJsArray</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String stringToJsArray(java.lang.Object)
      </function-signature>
  </function>
  <function>
      <description>Print first element of Java String array as quoted JavaScript string.</description>
      <name>jsString</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String jsString(java.lang.Object)
      </function-signature>
   </function>
  <function>
      <description>Generates a JS argument map parameter like
        , myModel: "m1"
        if the value is not empty (the output starts with a comma!). Otherwise it generates an empty string, i.e. no parameter.
        This is especially useful to reduce long argument maps with lots of optional parameters.
      </description>
      <name>optionalJsStringParam</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String optionalJsStringParam(java.lang.String, java.lang.Object)
      </function-signature>
  </function>
  <function>
      <description>Generates a JS argument map parameter like
        , myModel: someNumber
        if the value is not empty (the output starts with a comma!). Otherwise it generates an empty string, i.e. no parameter.
        This is especially useful to reduce long argument maps with lots of optional parameters.
      </description>
      <name>optionalJsNumberParam</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String optionalJsNumberParam(java.lang.String, java.lang.Object)
      </function-signature>
  </function>
  <function>
      <description>The specified object as JS boolean.</description>
      <name>jsBoolean</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String jsBoolean(java.lang.Object)
      </function-signature>
  </function>
  <function>
      <description>The specified object as JS boolean with the given default value.</description>
      <name>jsBooleanWithDefault</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String jsBooleanWithDefault(java.lang.Object, java.lang.Object)
      </function-signature>
  </function>
  <function>
      <description>Generates a JS argument map parameter like
        , myModel: true (starting with a comma!)
        if the value is not empty. True for true, false in all other non-empty cases.
      </description>
      <name>optionalJsBooleanParam</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String optionalJsBooleanParam(java.lang.String, java.lang.Object)
      </function-signature>
   </function>
  <function>
      <description>Generates a JS argument map parameter like
        , myFunction: function(){ value } 
        (starting with a comma!) if the value is not empty.
      </description>
      <name>optionalJsFunctionParam</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String optionalJsFunctionParam(java.lang.String, java.lang.Object)
      </function-signature>
   </function>
  <function>
     <description>Generates an ID.</description>
     <name>newId</name>
     <function-class>
        de.businesscode.bcdui.web.taglib.webpage.Functions
     </function-class>
     <function-signature>
        java.lang.String newId(java.lang.String)
     </function-signature>
   </function>
  <function>
      <description>Prints the first string argument as JavaScript Array string if it is non-emtpy and the second otherwise.</description>
      <name>coalesceStringToJsArray</name>
      <function-class>
         de.businesscode.bcdui.web.taglib.webpage.Functions
      </function-class>
      <function-signature>
         java.lang.String coalesceStringToJsArray(java.lang.Object,java.lang.Object)
      </function-signature>
  </function>

</taglib>
